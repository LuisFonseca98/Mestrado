{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPDj4+uJXVMnMSM3TFSphIK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"9x3w2z0ocDmY"},"outputs":[],"source":["#NECESSARY IMPORTS\n","import itertools\n","import numpy as np\n","import bokeh.io\n","import bokeh.plotting\n","bokeh.io.output_notebook()"]},{"cell_type":"code","source":["def allsubseqs(seq, n):\n","  \"\"\"Return a set containing all subsequences of length n\"\"\"\n","  return set(itertools.combinations(seq, n))"],"metadata":{"id":"qJYwunQRglVd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["allsubseqs('abcd', 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SopYiFqlkDH5","executionInfo":{"status":"ok","timestamp":1710195295525,"user_tz":0,"elapsed":3,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"fc89c3d1-1cf6-48da-9db6-c7b34c895ee8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{('a', 'b', 'c'), ('a', 'b', 'd'), ('a', 'c', 'd'), ('b', 'c', 'd')}"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["#algoritmo naive:\n","#m -> comprimento de seq1\n","#n -> comprimento de seq2\n","#sendo que m >= n\n","#1) gerar todas as subsequências de seq1 com comprimento n\n","#2) verificar se algumas subsequências corresponde a seq2\n","#3) Gertar todas as subsequências de seq1 e seq2 de comprimento q=n-1\n","#4) comparar e ver se algumas subsequências correspondem. Se sim, retornar\n","#5) voltar ao passo3, diminuindo q por um em cada ciclo ate se chegar a q=1\n","#6) se nenhuma subsequência comum for encontrada quando q=1, retornar uma string vazia\n","\n","def naive_lcslen(seq1, seq2, return_lcs=False):\n","    \"\"\"Naive implementation of LCS length calculator.\"\"\"\n","    # For convenience, make sure seq1 is longer than seq2\n","    if len(seq1) < len(seq2):\n","      seq1, seq2 = seq2, seq1\n","\n","    # Initialize length of subsequence to consider\n","    q = len(seq2)\n","\n","  # Compare subsequences for a match\n","    while q > 0:\n","      # Generate subsequences\n","      seq1_subseqs = allsubseqs(seq1, q)\n","      seq2_subseqs = allsubseqs(seq2, q)\n","      # Compute the intersections (common subsequences)\n","      lcs_set = seq1_subseqs.intersection(seq2_subseqs)\n","      # If the intersection is non-empty, we've found the LCS\n","      if len(lcs_set) > 0:\n","          break\n","      # Decrement length of subsequence\n","      q -= 1\n","    if return_lcs:\n","      return q, tuple([\"\".join(lcs) for lcs in lcs_set])\n","    else:\n","      return q\n","\n"],"metadata":{"id":"IWcE4VUcgvuw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def test_lcslen(lcslen):\n","  \"\"\"Test a given function to computing LCS\"\"\"\n","  # Define test sequences\n","  seq1 = 'abcd'\n","  seq2 = 'abcdefg'\n","  seq3 = 'adef'\n","  assert lcslen('', '') == 0\n","  assert lcslen('', seq1) == 0\n","  assert lcslen(seq1, seq1) == 4\n","  assert lcslen(seq1, seq2) == 4\n","  assert lcslen(seq1, seq3) == 2\n","  assert lcslen(seq2, seq3) == 4"],"metadata":{"id":"9HoSaZnViTeE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_lcslen(naive_lcslen)"],"metadata":{"id":"yiIGeRyRj5KU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rg = np.random.default_rng(3252)\n","def random_protein_sequence(n):\n","  \"\"\"Generate a random protein sequence.\"\"\"\n","  return \"\".join(rg.choice(list(\"ACDEFGHIKLMNPQRSTVWY\"),size=n))"],"metadata":{"id":"B2EFbF4miXi1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# o algoritmo de Naive Bayes permite categorizar textos baseados na frequência das palvras\n","# pode ser usado se determinado e-mail é SPAM\n","# apresenta um desempenho maior que outros classificadores\n","# permite desconsiderar a correlação entre as variáveis.\n","\n","# Generate random sequences and compute LCS\n","seq1 = random_protein_sequence(20)\n","seq2 = random_protein_sequence(24)\n","len_lcs, lcs = naive_lcslen(seq1, seq2, return_lcs=True)\n","print(\"\"\"seq1: {seq1:s} seq2: {seq2:s} LCS length: {len_lcs:d}\"\"\".format(seq1=seq1, seq2=seq2, len_lcs=len_lcs))\n","print(\"The LCS(s) is/are:\", lcs)\n","\n","#conforme as diferentes sequências, gerar diferentes LCS(s)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4l0XhnS-lIol","executionInfo":{"status":"ok","timestamp":1710195636279,"user_tz":0,"elapsed":7850,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"d91a17bd-42c5-4626-e2aa-17330d9028cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["seq1: HDHNIDFYGSARVPAEPAPF seq2: WKSMMNYVSQCTYYCYHECDQDQM LCS length: 4\n","The LCS(s) is/are: ('NYSE', 'NYVE')\n"]}]},{"cell_type":"code","source":["def dp_lcslen(seq1, seq2):\n","  \"\"\"Length of LCS using a dynamic program.\"\"\"\n","  # Initialize matrix of substring LCSs.\n","  lcs_mat = np.zeros((len(seq1) + 1, len(seq2) + 1), dtype=int)\n","  # Build matrix, left to right, row by row\n","  for i in range(1, len(seq1) + 1):\n","    for j in range(1, len(seq2) + 1):\n","      if seq1[i - 1] == seq2[j - 1]:\n","        lcs_mat[i, j] = lcs_mat[i - 1, j - 1] + 1\n","      else:\n","        lcs_mat[i, j] = max(lcs_mat[i - 1, j], lcs_mat[i, j - 1])\n","  return lcs_mat[-1, -1]"],"metadata":{"id":"DOxtJZJJlPtV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_lcslen(dp_lcslen)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"irlUPcG8nHtc","executionInfo":{"status":"ok","timestamp":1710195933712,"user_tz":0,"elapsed":3,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"804b55f3-cbcc-466f-c367-f94f29d60761"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["None\n"]}]},{"cell_type":"code","source":["# Generate random sequences and compute LCS\n","seq1 = random_protein_sequence(20)\n","seq2 = random_protein_sequence(24)\n","len_lcs = dp_lcslen(seq1, seq2)\n","print(\"\"\"seq1: {seq1:s} seq2: {seq2:s} LCS length: {len_lcs:d}\"\"\".format(seq1=seq1, seq2=seq2, len_lcs=len_lcs))\n","print(\"The LCS(s) is/are:\", lcs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eqKE5c0lnIGB","executionInfo":{"status":"ok","timestamp":1710196047324,"user_tz":0,"elapsed":2,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"da4b4598-0ce6-484b-9560-7119bda80e1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["seq1: WITPCGDEDASPCYHADQRR seq2: FQRMNICARHISPNVQMMTMQSFM LCS length: 6\n","The LCS(s) is/are: ('NYSE', 'NYVE')\n"]}]},{"cell_type":"code","source":["n = np.arange(2, 1001)\n","expon_complexity = 2 ** n\n","polynomial_complexity = n ** 2\n","p = bokeh.plotting.figure(\n","x_axis_label=\"n\",\n","y_axis_label=\"time to compute (a.u.)\",\n","x_axis_type=\"log\",\n","y_axis_type=\"log\",\n","frame_height=225,\n","frame_width=325,\n","x_range=[n.min(), n.max()],\n","y_range=[0.1, 1e11],\n",")\n","p.line(n, expon_complexity, line_width=2, legend_label=\"naive\")\n","p.line(n, polynomial_complexity, line_width=2, color='orange',\n","legend_label=\"dynamic program\")\n","p.legend.location = 'bottom_right'\n","bokeh.io.show(p)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"g8w64SKinN2J","executionInfo":{"status":"ok","timestamp":1710196048355,"user_tz":0,"elapsed":754,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"1b98e030-3a2a-441e-e38a-394afc7f9db8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function now() {\n","    return new Date();\n","  }\n","\n","  const force = true;\n","\n","  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n","    root._bokeh_onload_callbacks = [];\n","    root._bokeh_is_loading = undefined;\n","  }\n","\n","const JS_MIME_TYPE = 'application/javascript';\n","  const HTML_MIME_TYPE = 'text/html';\n","  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n","  const CLASS_NAME = 'output_bokeh rendered_html';\n","\n","  /**\n","   * Render data to the DOM node\n","   */\n","  function render(props, node) {\n","    const script = document.createElement(\"script\");\n","    node.appendChild(script);\n","  }\n","\n","  /**\n","   * Handle when an output is cleared or removed\n","   */\n","  function handleClearOutput(event, handle) {\n","    function drop(id) {\n","      const view = Bokeh.index.get_by_id(id)\n","      if (view != null) {\n","        view.model.document.clear()\n","        Bokeh.index.delete(view)\n","      }\n","    }\n","\n","    const cell = handle.cell;\n","\n","    const id = cell.output_area._bokeh_element_id;\n","    const server_id = cell.output_area._bokeh_server_id;\n","\n","    // Clean up Bokeh references\n","    if (id != null) {\n","      drop(id)\n","    }\n","\n","    if (server_id !== undefined) {\n","      // Clean up Bokeh references\n","      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n","      cell.notebook.kernel.execute(cmd_clean, {\n","        iopub: {\n","          output: function(msg) {\n","            const id = msg.content.text.trim()\n","            drop(id)\n","          }\n","        }\n","      });\n","      // Destroy server and session\n","      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n","      cell.notebook.kernel.execute(cmd_destroy);\n","    }\n","  }\n","\n","  /**\n","   * Handle when a new output is added\n","   */\n","  function handleAddOutput(event, handle) {\n","    const output_area = handle.output_area;\n","    const output = handle.output;\n","\n","    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n","    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n","      return\n","    }\n","\n","    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n","\n","    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n","      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n","      // store reference to embed id on output_area\n","      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n","    }\n","    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n","      const bk_div = document.createElement(\"div\");\n","      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n","      const script_attrs = bk_div.children[0].attributes;\n","      for (let i = 0; i < script_attrs.length; i++) {\n","        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n","        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n","      }\n","      // store reference to server id on output_area\n","      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n","    }\n","  }\n","\n","  function register_renderer(events, OutputArea) {\n","\n","    function append_mime(data, metadata, element) {\n","      // create a DOM node to render to\n","      const toinsert = this.create_output_subarea(\n","        metadata,\n","        CLASS_NAME,\n","        EXEC_MIME_TYPE\n","      );\n","      this.keyboard_manager.register_events(toinsert);\n","      // Render to node\n","      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n","      render(props, toinsert[toinsert.length - 1]);\n","      element.append(toinsert);\n","      return toinsert\n","    }\n","\n","    /* Handle when an output is cleared or removed */\n","    events.on('clear_output.CodeCell', handleClearOutput);\n","    events.on('delete.Cell', handleClearOutput);\n","\n","    /* Handle when a new output is added */\n","    events.on('output_added.OutputArea', handleAddOutput);\n","\n","    /**\n","     * Register the mime type and append_mime function with output_area\n","     */\n","    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n","      /* Is output safe? */\n","      safe: true,\n","      /* Index of renderer in `output_area.display_order` */\n","      index: 0\n","    });\n","  }\n","\n","  // register the mime type if in Jupyter Notebook environment and previously unregistered\n","  if (root.Jupyter !== undefined) {\n","    const events = require('base/js/events');\n","    const OutputArea = require('notebook/js/outputarea').OutputArea;\n","\n","    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n","      register_renderer(events, OutputArea);\n","    }\n","  }\n","  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n","    root._bokeh_timeout = Date.now() + 5000;\n","    root._bokeh_failed_load = false;\n","  }\n","\n","  const NB_LOAD_WARNING = {'data': {'text/html':\n","     \"<div style='background-color: #fdd'>\\n\"+\n","     \"<p>\\n\"+\n","     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n","     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n","     \"</p>\\n\"+\n","     \"<ul>\\n\"+\n","     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n","     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n","     \"</ul>\\n\"+\n","     \"<code>\\n\"+\n","     \"from bokeh.resources import INLINE\\n\"+\n","     \"output_notebook(resources=INLINE)\\n\"+\n","     \"</code>\\n\"+\n","     \"</div>\"}};\n","\n","  function display_loaded() {\n","    const el = document.getElementById(null);\n","    if (el != null) {\n","      el.textContent = \"BokehJS is loading...\";\n","    }\n","    if (root.Bokeh !== undefined) {\n","      if (el != null) {\n","        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n","      }\n","    } else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(display_loaded, 100)\n","    }\n","  }\n","\n","  function run_callbacks() {\n","    try {\n","      root._bokeh_onload_callbacks.forEach(function(callback) {\n","        if (callback != null)\n","          callback();\n","      });\n","    } finally {\n","      delete root._bokeh_onload_callbacks\n","    }\n","    console.debug(\"Bokeh: all callbacks have finished\");\n","  }\n","\n","  function load_libs(css_urls, js_urls, callback) {\n","    if (css_urls == null) css_urls = [];\n","    if (js_urls == null) js_urls = [];\n","\n","    root._bokeh_onload_callbacks.push(callback);\n","    if (root._bokeh_is_loading > 0) {\n","      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n","      return null;\n","    }\n","    if (js_urls == null || js_urls.length === 0) {\n","      run_callbacks();\n","      return null;\n","    }\n","    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n","    root._bokeh_is_loading = css_urls.length + js_urls.length;\n","\n","    function on_load() {\n","      root._bokeh_is_loading--;\n","      if (root._bokeh_is_loading === 0) {\n","        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n","        run_callbacks()\n","      }\n","    }\n","\n","    function on_error(url) {\n","      console.error(\"failed to load \" + url);\n","    }\n","\n","    for (let i = 0; i < css_urls.length; i++) {\n","      const url = css_urls[i];\n","      const element = document.createElement(\"link\");\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.rel = \"stylesheet\";\n","      element.type = \"text/css\";\n","      element.href = url;\n","      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n","      document.body.appendChild(element);\n","    }\n","\n","    for (let i = 0; i < js_urls.length; i++) {\n","      const url = js_urls[i];\n","      const element = document.createElement('script');\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.async = false;\n","      element.src = url;\n","      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n","      document.head.appendChild(element);\n","    }\n","  };\n","\n","  function inject_raw_css(css) {\n","    const element = document.createElement(\"style\");\n","    element.appendChild(document.createTextNode(css));\n","    document.body.appendChild(element);\n","  }\n","\n","  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.3.4.min.js\"];\n","  const css_urls = [];\n","\n","  const inline_js = [    function(Bokeh) {\n","      Bokeh.set_log_level(\"info\");\n","    },\n","function(Bokeh) {\n","    }\n","  ];\n","\n","  function run_inline_js() {\n","    if (root.Bokeh !== undefined || force === true) {\n","          for (let i = 0; i < inline_js.length; i++) {\n","      inline_js[i].call(root, root.Bokeh);\n","    }\n","} else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(run_inline_js, 100);\n","    } else if (!root._bokeh_failed_load) {\n","      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n","      root._bokeh_failed_load = true;\n","    } else if (force !== true) {\n","      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n","      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n","    }\n","  }\n","\n","  if (root._bokeh_is_loading === 0) {\n","    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n","    run_inline_js();\n","  } else {\n","    load_libs(css_urls, js_urls, function() {\n","      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n","      run_inline_js();\n","    });\n","  }\n","}(window));"],"application/vnd.bokehjs_load.v0+json":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    const el = document.getElementById(null);\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.3.4.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n          for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n"]},{"output_type":"display_data","data":{"text/html":["\n","  <div id=\"f87d3a78-7545-4561-8b8b-0b2698e1c770\" data-root-id=\"p1001\" style=\"display: contents;\"></div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function embed_document(root) {\n","  const docs_json = {\"f223a0ff-cd6a-4663-8035-57473ddcbed6\":{\"version\":\"3.3.4\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"p1001\",\"attributes\":{\"x_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"p1010\",\"attributes\":{\"start\":2,\"end\":1000}},\"y_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"p1011\",\"attributes\":{\"start\":0.1,\"end\":100000000000.0}},\"x_scale\":{\"type\":\"object\",\"name\":\"LogScale\",\"id\":\"p1012\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LogScale\",\"id\":\"p1013\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"p1008\"},\"renderers\":[{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1041\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1035\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1036\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1037\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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pQIAAKYCAACnAgAAqAIAAKkCAACqAgAAqwIAAKwCAACtAgAArgIAAK8CAACwAgAAsQIAALICAACzAgAAtAIAALUCAAC2AgAAtwIAALgCAAC5AgAAugIAALsCAAC8AgAAvQIAAL4CAAC/AgAAwAIAAMECAADCAgAAwwIAAMQCAADFAgAAxgIAAMcCAADIAgAAyQIAAMoCAADLAgAAzAIAAM0CAADOAgAAzwIAANACAADRAgAA0gIAANMCAADUAgAA1QIAANYCAADXAgAA2AIAANkCAADaAgAA2wIAANwCAADdAgAA3gIAAN8CAADgAgAA4QIAAOICAADjAgAA5AIAAOUCAADmAgAA5wIAAOgCAADpAgAA6gIAAOsCAADsAgAA7QIAAO4CAADvAgAA8AIAAPECAADyAgAA8wIAAPQCAAD1AgAA9gIAAPcCAAD4AgAA+QIAAPoCAAD7AgAA/AIAAP0CAAD+AgAA/wIAAAADAAABAwAAAgMAAAMDAAAEAwAABQMAAAYDAAAHAwAACAMAAAkDAAAKAwAACwMAAAwDAAANAwAADgMAAA8DAAAQAwAAEQMAABIDAAATAwAAFAMAABUDAAAWAwAAFwMAABgDAAAZAwAAGgMAABsDAAAcAwAAHQMAAB4DAAAfAwAAIAMAACEDAAAiAwAAIwMAACQDAAAlAwAAJgMAACcDAAAoAwAAKQMAACoDAAArAwAALAMAAC0DAAAuAwAALwMAADADAAAxAwAAMgMAADMDAAA0AwAANQMAADYDAAA3AwAAOAMAADkDAAA6AwAAOwMAADwDAAA9AwAAPgMAAD8DAABAAwAAQQMAAEIDAABDAwAARAMAAEUDAABGAwAARwMAAEgDAABJAwAASgMAAEsDAABMAwAATQMAAE4DAABPAwAAUAMAAFEDAABSAwAAUwMAAFQDAABVAwAAVgMAAFcDAABYAwAAWQMAAFoDAABbAwAAXAMAAF0DAABeAwAAXwMAAGADAABhAwAAYgMAAGMDAABkAwAAZQMAAGYDAABnAwAAaAMAAGkDAABqAwAAawMAAGwDAABtAwAAbgMAAG8DAABwAwAAcQMAAHIDAABzAwAAdAMAAHUDAAB2AwAAdwMAAHgDAAB5AwAAegMAAHsDAAB8AwAAfQMAAH4DAAB/AwAAgAMAAIEDAACCAwAAgwMAAIQDAACFAwAAhgMAAIcDAACIAwAAiQMAAIoDAACLAwAAjAMAAI0DAACOAwAAjwMAAJADAACRAwAAkgMAAJMDAACUAwAAlQMAAJYDAACXAwAAmAMAAJkDAACaAwAAmwMAAJwDAACdAwAAngMAAJ8DAACgAwAAoQMAAKIDAACjAwAApAMAAKUDAACmAwAApwMAAKgDAACpAwAAqgMAAKsDAACsAwAArQMAAK4DAACvAwAAsAMAALEDAACyAwAAswMAALQDAAC1AwAAtgMAALcDAAC4AwAAuQMAALoDAAC7AwAAvAMAAL0DAAC+AwAAvwMAAMADAADBAwAAwgMAAMMDAADEAwAAxQMAAMYDAADHAwAAyAMAAMkDAADKAwAAywMAAMwDAADNAwAAzgMAAM8DAADQAwAA0QMAANIDAADTAwAA1AMAANUDAADWAwAA1wMAANgDAADZAwAA2gMAANsDAADcAwAA3QMAAN4DAADfAwAA4AMAAOEDAADiAwAA4wMAAOQDAADlAwAA5gMAAOcDAADoAwAA\"},\"shape\":[999],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":[4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296,8589934592,17179869184,34359738368,68719476736,137438953472,274877906944,549755813888,1099511627776,2199023255552,4398046511104,8796093022208,17592186044416,35184372088832,70368744177664,140737488355328,281474976710656,562949953421312,1125899906842624,2251799813685248,4503599627370496,9007199254740992.0,1.8014398509481984e+16,3.602879701896397e+16,7.205759403792794e+16,1.4411518807585587e+17,2.8823037615171174e+17,5.764607523034235e+17,1.152921504606847e+18,2.305843009213694e+18,4.611686018427388e+18,-9.223372036854776e+18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"shape\":[999],\"dtype\":\"object\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1042\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1043\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1038\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1039\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1040\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1052\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1046\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1047\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1048\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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pQIAAKYCAACnAgAAqAIAAKkCAACqAgAAqwIAAKwCAACtAgAArgIAAK8CAACwAgAAsQIAALICAACzAgAAtAIAALUCAAC2AgAAtwIAALgCAAC5AgAAugIAALsCAAC8AgAAvQIAAL4CAAC/AgAAwAIAAMECAADCAgAAwwIAAMQCAADFAgAAxgIAAMcCAADIAgAAyQIAAMoCAADLAgAAzAIAAM0CAADOAgAAzwIAANACAADRAgAA0gIAANMCAADUAgAA1QIAANYCAADXAgAA2AIAANkCAADaAgAA2wIAANwCAADdAgAA3gIAAN8CAADgAgAA4QIAAOICAADjAgAA5AIAAOUCAADmAgAA5wIAAOgCAADpAgAA6gIAAOsCAADsAgAA7QIAAO4CAADvAgAA8AIAAPECAADyAgAA8wIAAPQCAAD1AgAA9gIAAPcCAAD4AgAA+QIAAPoCAAD7AgAA/AIAAP0CAAD+AgAA/wIAAAADAAABAwAAAgMAAAMDAAAEAwAABQMAAAYDAAAHAwAACAMAAAkDAAAKAwAACwMAAAwDAAANAwAADgMAAA8DAAAQAwAAEQMAABIDAAATAwAAFAMAABUDAAAWAwAAFwMAABgDAAAZAwAAGgMAABsDAAAcAwAAHQMAAB4DAAAfAwAAIAMAACEDAAAiAwAAIwMAACQDAAAlAwAAJgMAACcDAAAoAwAAKQMAACoDAAArAwAALAMAAC0DAAAuAwAALwMAADADAAAxAwAAMgMAADMDAAA0AwAANQMAADYDAAA3AwAAOAMAADkDAAA6AwAAOwMAADwDAAA9AwAAPgMAAD8DAABAAwAAQQMAAEIDAABDAwAARAMAAEUDAABGAwAARwMAAEgDAABJAwAASgMAAEsDAABMAwAATQMAAE4DAABPAwAAUAMAAFEDAABSAwAAUwMAAFQDAABVAwAAVgMAAFcDAABYAwAAWQMAAFoDAABbAwAAXAMAAF0DAABeAwAAXwMAAGADAABhAwAAYgMAAGMDAABkAwAAZQMAAGYDAABnAwAAaAMAAGkDAABqAwAAawMAAGwDAABtAwAAbgMAAG8DAABwAwAAcQMAAHIDAABzAwAAdAMAAHUDAAB2AwAAdwMAAHgDAAB5AwAAegMAAHsDAAB8AwAAfQMAAH4DAAB/AwAAgAMAAIEDAACCAwAAgwMAAIQDAACFAwAAhgMAAIcDAACIAwAAiQMAAIoDAACLAwAAjAMAAI0DAACOAwAAjwMAAJADAACRAwAAkgMAAJMDAACUAwAAlQMAAJYDAACXAwAAmAMAAJkDAACaAwAAmwMAAJwDAACdAwAAngMAAJ8DAACgAwAAoQMAAKIDAACjAwAApAMAAKUDAACmAwAApwMAAKgDAACpAwAAqgMAAKsDAACsAwAArQMAAK4DAACvAwAAsAMAALEDAACyAwAAswMAALQDAAC1AwAAtgMAALcDAAC4AwAAuQMAALoDAAC7AwAAvAMAAL0DAAC+AwAAvwMAAMADAADBAwAAwgMAAMMDAADEAwAAxQMAAMYDAADHAwAAyAMAAMkDAADKAwAAywMAAMwDAADNAwAAzgMAAM8DAADQAwAA0QMAANIDAADTAwAA1AMAANUDAADWAwAA1wMAANgDAADZAwAA2gMAANsDAADcAwAA3QMAAN4DAADfAwAA4AMAAOEDAADiAwAA4wMAAOQDAADlAwAA5gMAAOcDAADoAwAA\"},\"shape\":[999],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"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\"},\"shape\":[999],\"dtype\":\"int32\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1053\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1054\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1049\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1050\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1051\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_alpha\":0.2,\"line_width\":2}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"p1009\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"p1024\"},{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"p1025\",\"attributes\":{\"renderers\":\"auto\"}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"p1026\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"p1027\",\"attributes\":{\"syncable\":false,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5}}}},{\"type\":\"object\",\"name\":\"SaveTool\",\"id\":\"p1032\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"p1033\"},{\"type\":\"object\",\"name\":\"HelpTool\",\"id\":\"p1034\"}]}},\"left\":[{\"type\":\"object\",\"name\":\"LogAxis\",\"id\":\"p1019\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"LogTicker\",\"id\":\"p1020\",\"attributes\":{\"num_minor_ticks\":10,\"mantissas\":[1,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"LogTickFormatter\",\"id\":\"p1021\"},\"axis_label\":\"time to compute (a.u.)\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1022\"}}}],\"below\":[{\"type\":\"object\",\"name\":\"LogAxis\",\"id\":\"p1014\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"LogTicker\",\"id\":\"p1015\",\"attributes\":{\"num_minor_ticks\":10,\"mantissas\":[1,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"LogTickFormatter\",\"id\":\"p1016\"},\"axis_label\":\"n\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1017\"}}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1018\",\"attributes\":{\"axis\":{\"id\":\"p1014\"}}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1023\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"p1019\"}}},{\"type\":\"object\",\"name\":\"Legend\",\"id\":\"p1044\",\"attributes\":{\"location\":\"bottom_right\",\"items\":[{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1045\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"naive\"},\"renderers\":[{\"id\":\"p1041\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1055\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"dynamic program\"},\"renderers\":[{\"id\":\"p1052\"}]}}]}}],\"frame_width\":325,\"frame_height\":225}}]}};\n","  const render_items = [{\"docid\":\"f223a0ff-cd6a-4663-8035-57473ddcbed6\",\"roots\":{\"p1001\":\"f87d3a78-7545-4561-8b8b-0b2698e1c770\"},\"root_ids\":[\"p1001\"]}];\n","  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n","  }\n","  if (root.Bokeh !== undefined) {\n","    embed_document(root);\n","  } else {\n","    let attempts = 0;\n","    const timer = setInterval(function(root) {\n","      if (root.Bokeh !== undefined) {\n","        clearInterval(timer);\n","        embed_document(root);\n","      } else {\n","        attempts++;\n","        if (attempts > 100) {\n","          clearInterval(timer);\n","          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n","        }\n","      }\n","    }, 10, root)\n","  }\n","})(window);"],"application/vnd.bokehjs_exec.v0+json":""},"metadata":{"application/vnd.bokehjs_exec.v0+json":{"id":"p1001"}}}]},{"cell_type":"code","source":["def dp_lcslen(seq1, seq2, return_lcs=False):\n","  \"\"\"Length of LCS using a dynamic program.\"\"\"\n","  # Initialize matrix of substring LCSs.\n","  lcs_mat = np.zeros((len(seq1) + 1, len(seq2) + 1), dtype=int)\n","  # Build matrix, left to right, row by row\n","  for i in range(1, len(seq1) + 1):\n","    for j in range(1, len(seq2) + 1):\n","      if seq1[i - 1] == seq2[j - 1]:\n","        lcs_mat[i, j] = lcs_mat[i - 1, j - 1] + 1\n","      else:\n","        lcs_mat[i, j] = max(lcs_mat[i - 1, j], lcs_mat[i, j - 1])\n","  if return_lcs:\n","    lcs = \"\"\n","    i = len(seq1)\n","    j = len(seq2)\n","    while i != 0 and j != 0:\n","      if lcs_mat[i, j] == lcs_mat[i - 1, j]:\n","        i -= 1\n","      elif lcs_mat[i, j] == lcs_mat[i, j - 1]:\n","        j -= 1\n","      else:\n","        lcs = seq1[i - 1] + lcs\n","        i -= 1\n","        j -= 1\n","    return lcs_mat[-1, -1], lcs\n","  else:\n","    return lcs_mat[-1, -1]"],"metadata":{"id":"unOw3bHQoL1G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Generate random sequences and compute LCS\n","seq1 = random_protein_sequence(20)\n","seq2 = random_protein_sequence(24)\n","len_lcs, lcs = dp_lcslen(seq1, seq2, return_lcs=True)\n","print(\"\"\"seq1: {seq1:s} seq2: {seq2:s} LCS length: {len_lcs:d}\"\"\".format(seq1=seq1, seq2=seq2, len_lcs=len_lcs))\n","print(\"The LCS(s) is/are:\", lcs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d_yMgbbgojsS","executionInfo":{"status":"ok","timestamp":1710196243925,"user_tz":0,"elapsed":9,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"40120fd8-3b90-4f3f-e0e3-18b554034b4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["seq1: SRITIPPYKDSCGCAVCKSL seq2: QPCMLARNCSWLGKCWDIAIQALM LCS length: 6\n","The LCS(s) is/are: PCACSL\n"]}]},{"cell_type":"code","source":["n = np.arange(2, 2002)\n","expon_complexity = 2 ** n\n","polynomial_complexity = n ** 2\n","p = bokeh.plotting.figure(\n","x_axis_label=\"n\",\n","y_axis_label=\"time to compute (a.u.)\",\n","x_axis_type=\"log\",\n","y_axis_type=\"log\",\n","frame_height=225,\n","frame_width=325,\n","x_range=[n.min(), n.max()],\n","y_range=[0.1, 2e11],\n",")\n","p.line(n, expon_complexity, line_width=2, legend_label=\"naive\")\n","p.line(n, polynomial_complexity, line_width=2, color='orange',\n","legend_label=\"dynamic program\")\n","p.legend.location = 'bottom_right'\n","bokeh.io.show(p)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":486},"id":"5VWVl9A0ozVF","executionInfo":{"status":"ok","timestamp":1710196308441,"user_tz":0,"elapsed":305,"user":{"displayName":"Luis Semedo","userId":"09787676352233946729"}},"outputId":"d41ef1e5-c1bb-45ca-a908-607ad2eaea7e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function now() {\n","    return new Date();\n","  }\n","\n","  const force = true;\n","\n","  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n","    root._bokeh_onload_callbacks = [];\n","    root._bokeh_is_loading = undefined;\n","  }\n","\n","const JS_MIME_TYPE = 'application/javascript';\n","  const HTML_MIME_TYPE = 'text/html';\n","  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n","  const CLASS_NAME = 'output_bokeh rendered_html';\n","\n","  /**\n","   * Render data to the DOM node\n","   */\n","  function render(props, node) {\n","    const script = document.createElement(\"script\");\n","    node.appendChild(script);\n","  }\n","\n","  /**\n","   * Handle when an output is cleared or removed\n","   */\n","  function handleClearOutput(event, handle) {\n","    function drop(id) {\n","      const view = Bokeh.index.get_by_id(id)\n","      if (view != null) {\n","        view.model.document.clear()\n","        Bokeh.index.delete(view)\n","      }\n","    }\n","\n","    const cell = handle.cell;\n","\n","    const id = cell.output_area._bokeh_element_id;\n","    const server_id = cell.output_area._bokeh_server_id;\n","\n","    // Clean up Bokeh references\n","    if (id != null) {\n","      drop(id)\n","    }\n","\n","    if (server_id !== undefined) {\n","      // Clean up Bokeh references\n","      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n","      cell.notebook.kernel.execute(cmd_clean, {\n","        iopub: {\n","          output: function(msg) {\n","            const id = msg.content.text.trim()\n","            drop(id)\n","          }\n","        }\n","      });\n","      // Destroy server and session\n","      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n","      cell.notebook.kernel.execute(cmd_destroy);\n","    }\n","  }\n","\n","  /**\n","   * Handle when a new output is added\n","   */\n","  function handleAddOutput(event, handle) {\n","    const output_area = handle.output_area;\n","    const output = handle.output;\n","\n","    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n","    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n","      return\n","    }\n","\n","    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n","\n","    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n","      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n","      // store reference to embed id on output_area\n","      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n","    }\n","    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n","      const bk_div = document.createElement(\"div\");\n","      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n","      const script_attrs = bk_div.children[0].attributes;\n","      for (let i = 0; i < script_attrs.length; i++) {\n","        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n","        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n","      }\n","      // store reference to server id on output_area\n","      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n","    }\n","  }\n","\n","  function register_renderer(events, OutputArea) {\n","\n","    function append_mime(data, metadata, element) {\n","      // create a DOM node to render to\n","      const toinsert = this.create_output_subarea(\n","        metadata,\n","        CLASS_NAME,\n","        EXEC_MIME_TYPE\n","      );\n","      this.keyboard_manager.register_events(toinsert);\n","      // Render to node\n","      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n","      render(props, toinsert[toinsert.length - 1]);\n","      element.append(toinsert);\n","      return toinsert\n","    }\n","\n","    /* Handle when an output is cleared or removed */\n","    events.on('clear_output.CodeCell', handleClearOutput);\n","    events.on('delete.Cell', handleClearOutput);\n","\n","    /* Handle when a new output is added */\n","    events.on('output_added.OutputArea', handleAddOutput);\n","\n","    /**\n","     * Register the mime type and append_mime function with output_area\n","     */\n","    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n","      /* Is output safe? */\n","      safe: true,\n","      /* Index of renderer in `output_area.display_order` */\n","      index: 0\n","    });\n","  }\n","\n","  // register the mime type if in Jupyter Notebook environment and previously unregistered\n","  if (root.Jupyter !== undefined) {\n","    const events = require('base/js/events');\n","    const OutputArea = require('notebook/js/outputarea').OutputArea;\n","\n","    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n","      register_renderer(events, OutputArea);\n","    }\n","  }\n","  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n","    root._bokeh_timeout = Date.now() + 5000;\n","    root._bokeh_failed_load = false;\n","  }\n","\n","  const NB_LOAD_WARNING = {'data': {'text/html':\n","     \"<div style='background-color: #fdd'>\\n\"+\n","     \"<p>\\n\"+\n","     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n","     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n","     \"</p>\\n\"+\n","     \"<ul>\\n\"+\n","     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n","     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n","     \"</ul>\\n\"+\n","     \"<code>\\n\"+\n","     \"from bokeh.resources import INLINE\\n\"+\n","     \"output_notebook(resources=INLINE)\\n\"+\n","     \"</code>\\n\"+\n","     \"</div>\"}};\n","\n","  function display_loaded() {\n","    const el = document.getElementById(null);\n","    if (el != null) {\n","      el.textContent = \"BokehJS is loading...\";\n","    }\n","    if (root.Bokeh !== undefined) {\n","      if (el != null) {\n","        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n","      }\n","    } else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(display_loaded, 100)\n","    }\n","  }\n","\n","  function run_callbacks() {\n","    try {\n","      root._bokeh_onload_callbacks.forEach(function(callback) {\n","        if (callback != null)\n","          callback();\n","      });\n","    } finally {\n","      delete root._bokeh_onload_callbacks\n","    }\n","    console.debug(\"Bokeh: all callbacks have finished\");\n","  }\n","\n","  function load_libs(css_urls, js_urls, callback) {\n","    if (css_urls == null) css_urls = [];\n","    if (js_urls == null) js_urls = [];\n","\n","    root._bokeh_onload_callbacks.push(callback);\n","    if (root._bokeh_is_loading > 0) {\n","      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n","      return null;\n","    }\n","    if (js_urls == null || js_urls.length === 0) {\n","      run_callbacks();\n","      return null;\n","    }\n","    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n","    root._bokeh_is_loading = css_urls.length + js_urls.length;\n","\n","    function on_load() {\n","      root._bokeh_is_loading--;\n","      if (root._bokeh_is_loading === 0) {\n","        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n","        run_callbacks()\n","      }\n","    }\n","\n","    function on_error(url) {\n","      console.error(\"failed to load \" + url);\n","    }\n","\n","    for (let i = 0; i < css_urls.length; i++) {\n","      const url = css_urls[i];\n","      const element = document.createElement(\"link\");\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.rel = \"stylesheet\";\n","      element.type = \"text/css\";\n","      element.href = url;\n","      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n","      document.body.appendChild(element);\n","    }\n","\n","    for (let i = 0; i < js_urls.length; i++) {\n","      const url = js_urls[i];\n","      const element = document.createElement('script');\n","      element.onload = on_load;\n","      element.onerror = on_error.bind(null, url);\n","      element.async = false;\n","      element.src = url;\n","      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n","      document.head.appendChild(element);\n","    }\n","  };\n","\n","  function inject_raw_css(css) {\n","    const element = document.createElement(\"style\");\n","    element.appendChild(document.createTextNode(css));\n","    document.body.appendChild(element);\n","  }\n","\n","  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.3.4.min.js\"];\n","  const css_urls = [];\n","\n","  const inline_js = [    function(Bokeh) {\n","      Bokeh.set_log_level(\"info\");\n","    },\n","function(Bokeh) {\n","    }\n","  ];\n","\n","  function run_inline_js() {\n","    if (root.Bokeh !== undefined || force === true) {\n","          for (let i = 0; i < inline_js.length; i++) {\n","      inline_js[i].call(root, root.Bokeh);\n","    }\n","} else if (Date.now() < root._bokeh_timeout) {\n","      setTimeout(run_inline_js, 100);\n","    } else if (!root._bokeh_failed_load) {\n","      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n","      root._bokeh_failed_load = true;\n","    } else if (force !== true) {\n","      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n","      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n","    }\n","  }\n","\n","  if (root._bokeh_is_loading === 0) {\n","    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n","    run_inline_js();\n","  } else {\n","    load_libs(css_urls, js_urls, function() {\n","      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n","      run_inline_js();\n","    });\n","  }\n","}(window));"],"application/vnd.bokehjs_load.v0+json":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n\n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    const el = document.getElementById(null);\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.3.4.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-3.3.4.min.js\"];\n  const css_urls = [];\n\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {\n    }\n  ];\n\n  function run_inline_js() {\n    if (root.Bokeh !== undefined || force === true) {\n          for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(null)).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n","BokehUserWarning: out of range integer may result in loss of precision\n"]},{"output_type":"display_data","data":{"text/html":["\n","  <div id=\"b7115205-ae78-4df6-8f2e-fb836d35608a\" data-root-id=\"p1175\" style=\"display: contents;\"></div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["(function(root) {\n","  function embed_document(root) {\n","  const docs_json = {\"db1dd114-75cf-40a3-8f62-c6eca8abeb18\":{\"version\":\"3.3.4\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"Figure\",\"id\":\"p1175\",\"attributes\":{\"x_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"p1184\",\"attributes\":{\"start\":2,\"end\":2001}},\"y_range\":{\"type\":\"object\",\"name\":\"Range1d\",\"id\":\"p1185\",\"attributes\":{\"start\":0.1,\"end\":200000000000.0}},\"x_scale\":{\"type\":\"object\",\"name\":\"LogScale\",\"id\":\"p1186\"},\"y_scale\":{\"type\":\"object\",\"name\":\"LogScale\",\"id\":\"p1187\"},\"title\":{\"type\":\"object\",\"name\":\"Title\",\"id\":\"p1182\"},\"renderers\":[{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1215\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1209\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1210\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1211\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"\"},\"shape\":[2000],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":[4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296,8589934592,17179869184,34359738368,68719476736,137438953472,274877906944,549755813888,1099511627776,2199023255552,4398046511104,8796093022208,17592186044416,35184372088832,70368744177664,140737488355328,281474976710656,562949953421312,1125899906842624,2251799813685248,4503599627370496,9007199254740992.0,1.8014398509481984e+16,3.602879701896397e+16,7.205759403792794e+16,1.4411518807585587e+17,2.8823037615171174e+17,5.764607523034235e+17,1.152921504606847e+18,2.305843009213694e+18,4.611686018427388e+18,-9.223372036854776e+18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"shape\":[2000],\"dtype\":\"object\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1216\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1217\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1212\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1213\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1214\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"#1f77b4\",\"line_alpha\":0.2,\"line_width\":2}}}},{\"type\":\"object\",\"name\":\"GlyphRenderer\",\"id\":\"p1226\",\"attributes\":{\"data_source\":{\"type\":\"object\",\"name\":\"ColumnDataSource\",\"id\":\"p1220\",\"attributes\":{\"selected\":{\"type\":\"object\",\"name\":\"Selection\",\"id\":\"p1221\",\"attributes\":{\"indices\":[],\"line_indices\":[]}},\"selection_policy\":{\"type\":\"object\",\"name\":\"UnionRenderers\",\"id\":\"p1222\"},\"data\":{\"type\":\"map\",\"entries\":[[\"x\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"\"},\"shape\":[2000],\"dtype\":\"int32\",\"order\":\"little\"}],[\"y\",{\"type\":\"ndarray\",\"array\":{\"type\":\"bytes\",\"data\":\"\"},\"shape\":[2000],\"dtype\":\"int32\",\"order\":\"little\"}]]}}},\"view\":{\"type\":\"object\",\"name\":\"CDSView\",\"id\":\"p1227\",\"attributes\":{\"filter\":{\"type\":\"object\",\"name\":\"AllIndices\",\"id\":\"p1228\"}}},\"glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1223\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_width\":2}},\"nonselection_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1224\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_alpha\":0.1,\"line_width\":2}},\"muted_glyph\":{\"type\":\"object\",\"name\":\"Line\",\"id\":\"p1225\",\"attributes\":{\"x\":{\"type\":\"field\",\"field\":\"x\"},\"y\":{\"type\":\"field\",\"field\":\"y\"},\"line_color\":\"orange\",\"line_alpha\":0.2,\"line_width\":2}}}}],\"toolbar\":{\"type\":\"object\",\"name\":\"Toolbar\",\"id\":\"p1183\",\"attributes\":{\"tools\":[{\"type\":\"object\",\"name\":\"PanTool\",\"id\":\"p1198\"},{\"type\":\"object\",\"name\":\"WheelZoomTool\",\"id\":\"p1199\",\"attributes\":{\"renderers\":\"auto\"}},{\"type\":\"object\",\"name\":\"BoxZoomTool\",\"id\":\"p1200\",\"attributes\":{\"overlay\":{\"type\":\"object\",\"name\":\"BoxAnnotation\",\"id\":\"p1201\",\"attributes\":{\"syncable\":false,\"level\":\"overlay\",\"visible\":false,\"left\":{\"type\":\"number\",\"value\":\"nan\"},\"right\":{\"type\":\"number\",\"value\":\"nan\"},\"top\":{\"type\":\"number\",\"value\":\"nan\"},\"bottom\":{\"type\":\"number\",\"value\":\"nan\"},\"left_units\":\"canvas\",\"right_units\":\"canvas\",\"top_units\":\"canvas\",\"bottom_units\":\"canvas\",\"line_color\":\"black\",\"line_alpha\":1.0,\"line_width\":2,\"line_dash\":[4,4],\"fill_color\":\"lightgrey\",\"fill_alpha\":0.5}}}},{\"type\":\"object\",\"name\":\"SaveTool\",\"id\":\"p1206\"},{\"type\":\"object\",\"name\":\"ResetTool\",\"id\":\"p1207\"},{\"type\":\"object\",\"name\":\"HelpTool\",\"id\":\"p1208\"}]}},\"left\":[{\"type\":\"object\",\"name\":\"LogAxis\",\"id\":\"p1193\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"LogTicker\",\"id\":\"p1194\",\"attributes\":{\"num_minor_ticks\":10,\"mantissas\":[1,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"LogTickFormatter\",\"id\":\"p1195\"},\"axis_label\":\"time to compute (a.u.)\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1196\"}}}],\"below\":[{\"type\":\"object\",\"name\":\"LogAxis\",\"id\":\"p1188\",\"attributes\":{\"ticker\":{\"type\":\"object\",\"name\":\"LogTicker\",\"id\":\"p1189\",\"attributes\":{\"num_minor_ticks\":10,\"mantissas\":[1,5]}},\"formatter\":{\"type\":\"object\",\"name\":\"LogTickFormatter\",\"id\":\"p1190\"},\"axis_label\":\"n\",\"major_label_policy\":{\"type\":\"object\",\"name\":\"AllLabels\",\"id\":\"p1191\"}}}],\"center\":[{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1192\",\"attributes\":{\"axis\":{\"id\":\"p1188\"}}},{\"type\":\"object\",\"name\":\"Grid\",\"id\":\"p1197\",\"attributes\":{\"dimension\":1,\"axis\":{\"id\":\"p1193\"}}},{\"type\":\"object\",\"name\":\"Legend\",\"id\":\"p1218\",\"attributes\":{\"location\":\"bottom_right\",\"items\":[{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1219\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"naive\"},\"renderers\":[{\"id\":\"p1215\"}]}},{\"type\":\"object\",\"name\":\"LegendItem\",\"id\":\"p1229\",\"attributes\":{\"label\":{\"type\":\"value\",\"value\":\"dynamic program\"},\"renderers\":[{\"id\":\"p1226\"}]}}]}}],\"frame_width\":325,\"frame_height\":225}}]}};\n","  const render_items = [{\"docid\":\"db1dd114-75cf-40a3-8f62-c6eca8abeb18\",\"roots\":{\"p1175\":\"b7115205-ae78-4df6-8f2e-fb836d35608a\"},\"root_ids\":[\"p1175\"]}];\n","  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n","  }\n","  if (root.Bokeh !== undefined) {\n","    embed_document(root);\n","  } else {\n","    let attempts = 0;\n","    const timer = setInterval(function(root) {\n","      if (root.Bokeh !== undefined) {\n","        clearInterval(timer);\n","        embed_document(root);\n","      } else {\n","        attempts++;\n","        if (attempts > 100) {\n","          clearInterval(timer);\n","          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n","        }\n","      }\n","    }, 10, root)\n","  }\n","})(window);"],"application/vnd.bokehjs_exec.v0+json":""},"metadata":{"application/vnd.bokehjs_exec.v0+json":{"id":"p1175"}}}]},{"cell_type":"code","source":[],"metadata":{"id":"LxwR_FA4o12S"},"execution_count":null,"outputs":[]}]}